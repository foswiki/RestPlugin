<img src="%PUBURL%/%WEB%/%TOPIC%/wikiring-rest.png" style="float:right;padding:26px" />

---+!! !RestPlugin

<!--
One line description, required for extensions repository catalog.
   * Set SHORTDESCRIPTION = REST based CRUD API for javascript and applications
-->
%SHORTDESCRIPTION%

%TOC%

<img src="%PUBURL%/%WEB%/%TOPIC%/formfield_example.png" style="padding:6px" />

---++ Usage
This plugin begins the task of creating a CRUD style REST URI engine for Foswiki. 
It uses a Foswiki:Development.TopicObjectModel addressing scheme based on the System.IfStatements and System.QuerySearch syntax, 
and then enable both the retriving and setting / creation of topics and parts of topics.

Initially supporting JSON encoding, it can be extended to anything - so long as symetrical serialisation/deserialisation are implemented using the (post foswiki 1.1) =Foswiki::Serialise= class.

---+++ Resources
---++++ Web
| *Verb*   | *Implemented* | *URI*                                               | *Use* |
| =GET=    |     yes       | =http://x61/bin/query/[{Webname}/]webs[.json]=      |  get web resource information, currently a list of subwebs to the resource (if no Webname is specified, list all webs)    |
| =POST=   |     yes       | =http://x61/bin/query/[{Webname}/]webs[.json]=     |  create a new web in the uri's container web - parameters in payload as for the manage=createWeb     |
| =PUT=    |     no        | =http://x61/bin/query/{Webname}/webs[.json]=        |  update a web resource (=nop= until define some web specific info, like permissions, settings etc), or maybe for renaming a web?)     |
| =PATCH=  |     no        | =http://x61/bin/query/{Webname}/webs[.json]=        |  same as PUT?     |
| =DELETE= |     yes       | =http://x61/bin/query/{Webname}/webs[.json]=       |  delete web     |
---++++ Topic
| *Verb*   | *Implemented* | *URI*                                               | *Use* |
| =GET=    |     yes       | =http://x61/bin/query/{Webname}/[{TopicName/}]topic[.json]=      |  get topic's meta (if no TopicName is specified, list of all topics in a web. (array of names only?))    |
| =POST=   |     yes       | =http://x61/bin/query/{Webname}/topic[.json]=                   |  (TODO: might rejig to use UI::Manage::_create) create a new topic in the web container using the payload as topic data, and respecting AUTOINC name requests |
| =PUT=    |     no        | =http://x61/bin/query/{Webname}/{TopicName}/topic[.json]=        |  update/create a topic resource completely with the payload - anything missing from the sent structure will be removed in the new revision, will not respect AUTOINC, and will use the topic name in the URI, not the payload. |
| =PATCH=  |     yes       | =http://x61/bin/query/{Webname}/{TopicName}/topic[.json]=        |  update a topic using only a partial data - leaving unsent fields the same as n-1    |
| =DELETE= |     yes       | =http://x61/bin/query/{Webname}/{TopicName}/topic[.json]=        |  delete topic     |
---++++ Attachments
| *Verb*   | *Implemented* | *URI*                                               | *Use* |
| =GET=    |     yes       | =http://x61/bin/query/{Webname}/{TopicName}/[{attachmentname}/]attachments[.json]=      |  get attachment resource information, currently a list of subwebs to the resource (if no Webname is specified, list all webs)    |
| =POST=   |     no        | =http://x61/bin/query/{Webname}/{TopicName}/attachments[.json]=                         |  create a new attachment - can I just decode the payload and push to UI::Upload?     |
| =PUT=    |     no        | =http://x61/bin/query/{Webname}/{TopicName}/{attachmentname}/attachments[.json]=        |  update a attachment resource (=nop= until define some web specific info, like permissions, settings etc), or maybe for renaming a web?)     |
| =PATCH=  |     yes       | =http://x61/bin/query/{Webname}/{TopicName}[/{attachmentname}]/attachments[.json]=      | update the entire attachment meta array (if the attachment is not specified), if the attachment name is specified, update only the sent data elements for that attachment    |
| =DELETE= |     yes       | =http://x61/bin/query/{Webname}/{TopicName}/{attachmentname}/attachments[.json]=        |  delete attachment     |

---++++ unsupported requests
you cannot make a =topic= or =attachment= element request on the root (eg =http://x61/f/bin/query/topic=), or an =attachment= request on a web.

---+++ supported HTTP Request Types
To suport the different operations, =query= supports =GET|PUT|POST|PATCH|DELETE=, 
and as some web servers are set up to not accept all these, we can tunnel these using the URI param =?_method=PATCH=, 
or and added Header element - =X-HTTP-METHOD-OVERRIDE=. Note that these must be tunneled via a =POST=

---++++ GET
---++++ PUT
---++++ POST
Creates a new element in a container. So if you want to create a new topic, the URI is that of the web you want to place it, and the payload will contain a value that has a =_topic=
---++++ PATCH
---++++ DELETE

---+++ Examples:
---++++ using =curl= to update topic data.
=curl -X PATCH -H "Content-Type:text/json" -d '{"_text": "set the topic text to something"}' http://x61/f/bin/query/Main/SvenDowideit/topic.json= can be used to send a JSON payload 
that will set _only_ the topic text of your user's topic (ignoring authentication issues)

---++ Installation Instructions

%$INSTALL_INSTRUCTIONS%

---++ Plugin Info


|  Plugin Author(s): | Foswiki:Main.SvenDowideit - http://fosiki.com a %PUBURL%/%WEB%/%TOPIC%/wikiringlogo20x20.png [[http://WikiRing.com][WikiRing]] founding partner  |
|  Copyright: | &copy; SvenDowideit@fosiki.com |
|  Gear Icon | based on eXperience Crystal, by David Christian Berg |
|  UniversalWikiEditButton | http://www.aboutus.org/UniversalWikiEditButton |
|  License: | [[http://www.gnu.org/licenses/gpl.html][GPL (Gnu General Public License)]] |
|  Plugin Version: | %$VERSION% |
|  Change History: | <!-- versions below in reverse order -->&nbsp; |
|  Nov 2010:       | total rewrite using foswiki 1.1 concepts and syntax - see Foswiki:Development.RestPlugin |
|  Nov 2009:       | separate from dojo, and update for new JSON module |
|  Dependencies:   | %$DEPENDENCIES% |
|  Plugin Home:    | http://foswiki.org/Extensions/RestPlugin |


__Related Topics:__ %SYSTEMWEB%.InstalledPlugins, %SYSTEMWEB%.DeveloperDocumentationCategory, %SYSTEMWEB%.SitePreferences

<!-- Do _not_ attempt to edit this topic; it is auto-generated. Please add comments/questions/remarks to the feedback topic on foswiki.org instead. -->
